<template>  
	<scroller class="container">	
		<header id="header"></header>
		
		<div class="content">	
		<text class="title" value="未使用代金券：" if="{{shown1}}"></text>
		<hlist id="hlist1" class="list" if="{{shown1}}">
			<cell class="cell" repeat="(index, album) in albums1">				
				<div class="item_big">
					<item id="item1-{{index}}" class="album-name {{album.focusFlag}}" 
					money="{{album.money}}" moneyshown="{{album.moneyshown}}"
					desc="{{album.desc}}" descshown="{{album.descshown}}"
					corner="{{album.corner}}" cornershown="{{album.cornershown}}"
					title="{{album.title}}" tip="{{album.tip}}" tipshown="{{album.tipshown}}"></item>	
				</div>
			</cell>
		</hlist>		
		
		<text class="title" value="已使用代金券：" if="{{shown2}}"></text>
		<hlist id="hlist2" class="list" if="{{shown2}}">
			<cell class="cell" repeat="(index, album) in albums2">				
				<div class="item_big">
					<item id="item2-{{index}}" class="album-name {{album.focusFlag}}" 
					money="{{album.money}}" moneyshown="{{album.moneyshown}}"
					desc="{{album.desc}}" descshown="{{album.descshown}}"
					corner="{{album.corner}}" cornershown="{{album.cornershown}}"
					title="{{album.title}}" tip="{{album.tip}}" tipshown="{{album.tipshown}}"></item>		
				</div>
			</cell>
		</hlist>
			
		<text class="title" value="过期代金券：" if="{{shown3}}"></text>
		<hlist id="hlist3" class="list" if="{{shown3}}">
			<cell class="cell" repeat="(index, album) in albums3">				
				<div class="item_big">
					<item id="item3-{{index}}" class="album-name {{album.focusFlag}}" 
					money="{{album.money}}" moneyshown="{{album.moneyshown}}"
					desc="{{album.desc}}" descshown="{{album.descshown}}"
					corner="{{album.corner}}" cornershown="{{album.cornershown}}"
					title="{{album.title}}" tip="{{album.tip}}" tipshown="{{album.tipshown}}"></item>		
				</div>
			</cell>
		</hlist>		
		</div>
	</scroller>
</template>

<style>
  .container {
	position: absolute; left: 0; right: 0; top: 0; bottom: 0; 	
	background-color: rgba(111, 111, 111, 0.3);
	flex-direction: column; 
  }  
  .list {left: 20; right: 20; padding-right: 20; height: 100;}
  .scroller {left: 20; right: 20; flex-direction: row; }
  .cell { width: 142; margin-right: 0;}
  .item_big { width: 142; height: 100;	justify-content: center;  align-items: center; }
  .album-name { width: 120; height: 80; color: #000; font-size: 11;  lines: 1; }
  .title {left: 20; right: 20; height: 20; font-size: 13;  lines: 1;}
  .content {top: 150; } 
  .unfocus {border-width:0; }
  .focus {border-color: #0b0; border-width:3; }
</style>

<script>
require('./header.we');
require('./item.we');
var myToast = require('@weex-module/eventModule');

var globalEvent = require('@weex-module/globalEvent');
var animation = require('@weex-module/animation');
var dom = require('@weex-module/dom')
var stream = require('@weex-module/stream')
 
	
module.exports = {
 data: {    
	focusCls: 'focus',
	unfocusCls: 'unfocus',
	
	shown1: true,
	shown2: true,
	shown3: true,
	
	focusIndex1: 0,
	focusIndex2: 0,
	focusIndex3: 0,
	focusIndex: 0,
	
	albums1: [],
	albums2: [],
	albums3: [],
	
 },
 
	methods: {
		keyUp: function(){
			console.log("--keyUp -- ");
			if(this.focusIndex == 1){
				this.albums2[this.focusIndex2].focusFlag = this.unfocusCls;
				this.albums1[this.focusIndex1].focusFlag = this.focusCls;
				this.focusIndex--;
				this.doAnim('item2-'+this.focusIndex2, 'item1-'+this.focusIndex1);
				this.doUpScroll('header', 0);
			} else if(this.focusIndex == 2){
				this.albums3[this.focusIndex3].focusFlag = this.unfocusCls;
				this.albums2[this.focusIndex2].focusFlag = this.focusCls;
				this.focusIndex--;
				this.doAnim('item3-'+this.focusIndex3, 'item2-'+this.focusIndex2);
			}			
		},
		keyDown: function(){
			console.log("--keyDown -- ");
			if(this.focusIndex == 0){
				this.albums1[this.focusIndex1].focusFlag = this.unfocusCls;
				this.albums2[this.focusIndex2].focusFlag = this.focusCls;
				this.focusIndex++;
				this.doAnim('item1-'+this.focusIndex1, 'item2-'+this.focusIndex2);
				this.doDownScroll('header', 0);
			} else if(this.focusIndex == 1){
				this.albums2[this.focusIndex2].focusFlag = this.unfocusCls;
				this.albums3[this.focusIndex3].focusFlag = this.focusCls;
				this.focusIndex++;
				this.doAnim('item2-'+this.focusIndex2, 'item3-'+this.focusIndex3);								
			}
		},
		keyLeft: function(){
			console.log("--keyLeft -- ");
			if(this.focusIndex == 0 && this.focusIndex1 > 0){
				this.albums1[this.focusIndex1].focusFlag = this.unfocusCls;
				this.focusIndex1--;
				this.albums1[this.focusIndex1].focusFlag = this.focusCls;
				this.doAnim('item1-'+(this.focusIndex1+1), 'item1-'+this.focusIndex1);
				this.doLeftScroll('item1-', this.focusIndex1);
			} else if(this.focusIndex == 1 && this.focusIndex2 > 0){
				this.albums2[this.focusIndex2].focusFlag = this.unfocusCls;
				this.focusIndex2--;
				this.albums2[this.focusIndex2].focusFlag = this.focusCls;
				this.doAnim('item2-'+(this.focusIndex2+1), 'item2-'+this.focusIndex2);
				this.doLeftScroll('item2-', this.focusIndex2);
			} else if(this.focusIndex == 2 && this.focusIndex3 > 0){
				this.albums3[this.focusIndex3].focusFlag = this.unfocusCls;
				this.focusIndex3--;
				this.albums3[this.focusIndex3].focusFlag = this.focusCls;
				this.doAnim('item3-'+(this.focusIndex3+1), 'item3-'+this.focusIndex3);
				this.doLeftScroll('item3-', this.focusIndex3);
			}
		},
		keyRight: function(){
			console.log("--keyRight -- ");
			if(this.focusIndex == 0 && this.focusIndex1 < this.albums1.length - 1){
				this.albums1[this.focusIndex1].focusFlag = this.unfocusCls;
				this.focusIndex1++;
				this.albums1[this.focusIndex1].focusFlag = this.focusCls;
				this.doAnim('item1-'+(this.focusIndex1-1), 'item1-'+this.focusIndex1);
				this.doRightScroll('item1-', this.focusIndex1);
			} else if(this.focusIndex == 1 && this.focusIndex2 < this.albums2.length - 1){
				this.albums2[this.focusIndex2].focusFlag = this.unfocusCls;
				this.focusIndex2++;
				this.albums2[this.focusIndex2].focusFlag = this.focusCls;
				this.doAnim('item2-'+(this.focusIndex2-1), 'item2-'+this.focusIndex2);
				this.doRightScroll('item2-', this.focusIndex2);
			} else if(this.focusIndex == 2 && this.focusIndex3 < this.albums3.length - 1){
				this.albums3[this.focusIndex3].focusFlag = this.unfocusCls;
				this.focusIndex3++;
				this.albums3[this.focusIndex3].focusFlag = this.focusCls;
				this.doAnim('item3-'+(this.focusIndex3-1), 'item3-'+this.focusIndex3);
				this.doRightScroll('item3-', this.focusIndex3);
			}
		},
		
		doUpScroll: function(id, index){			
			var item = this.$el(id);
			console.log("--doUpScroll --- " + id + ", index = " + index);
			
			dom.scrollToElement(item, {
				offset: -120
			});
						
		},
		
		doDownScroll: function(id, index){			
			var item = this.$el(id);
			console.log("--doUpScroll --- " + id + ", index = " + index);
			
			dom.scrollToElement(item, {
				offset: 120
			});
						
		},
		
		doLeftScroll: function(id, index){
			if(index - 2 < 0){
				return;
			}
			var first = index - 2;
			var item = this.$el(id + first);
			console.log("--doLeftScroll --- " + id + ", index = " + index);
			
			dom.scrollToElement(item, {
				offset: -142
			});
						
		},
		
		doRightScroll: function(id, index){
			if(index - 3 < 0){
				return;
			}
			var first = index - 3;
			var item = this.$el(id + first);
			console.log("--doRightScroll --- " + id + ", index = " + index);
			dom.scrollToElement(item, {
				offset: 0
			});
			
		},
		
		doAnim: function (id1, id2) {			
			var item1 = this.$el(id1);
			var item2 = this.$el(id2);
			this.doScale(item1, 1.0, 0);
			this.doScale(item2, 1.1, 0);			
		},
		
		doScale: function(item, rate, dly) {
			console.log("--doScale --- " + item);
			animation.transition(item, {
				styles: {
					transform: 'scale(' + rate + ')',
				},
				delay: dly,
				duration: 222,
			}, function () {
				console.log("animation doscale finished.");
			});
		},
	
		dispatchKey: function(key) {
			console.log("--dispatchKey keycode = " + key);
			
			if(key == 19){
				this.keyUp();
			}
			if(key == 20) {
				this.keyDown();
			}
			if(key == 21){
				this.keyLeft();
			}
			if(key == 22){
				this.keyRight();
			}		 
        },
		
		initFlag: function(){
			if(this.shown1){
				this.albums1[0].focusFlag = this.focusCls;
				for (var i = 1; i < this.albums1.length; i++) {
					this.albums1[i].focusFlag = this.unfocusCls;
					//this.$vm('item1-'+i).$emit(
					//	'notifydata',
					//	 this.albums1[i].name
					//);
				}
			}
			if(this.shown2){
				for (var i = 0; i < this.albums2.length; i++) {
					this.albums2[i].focusFlag = this.unfocusCls;
				}
			}
			if(this.shown3){
				for (var i = 0; i < this.albums3.length; i++) {
					this.albums3[i].focusFlag = this.unfocusCls;
				}
			}
			this.doScale('item1-0', 1.1, 2000);
		},	
	
		getTestData: function(callback) {
			return stream.fetch({
				method: 'GET',
				type: 'json',
				url: 'https://api.github.com/repos/vuejs/vue/tags'
			}, callback)
		},

		onDataSuceess: function(data){
			var size = data.length;
			for (var i = 0; i < size; i++) {
				this.albums1.push({
					money: i + "元",
					moneyshown: true,		
					desc: data[i].zipball_url,
					descshown: true,
					corner: "",
					cornershown: false,
					title: data[i].name,
	  
					tip: "没有代金券",
					tipshown: false,
					focusFlag: 0
					});
				if(i < 10){
				this.albums2.push({
					money: (10-i) + "元",
					 moneyshown: true,		
					 desc: "还未使用yy，使用规则 " + i,
					 descshown: true,
					 corner: "已使用",
					 cornershown: true,
					 title: "xxx " + i,
				  
					 tip: "没有代金券",
					 tipshown: false,
					 focusFlag: 0
				  });
				  }	 
				  this.albums3.push({
					 money: i + "元",
					 moneyshown: false,		
					 desc: "已经已经使用yy，使用规则 " + i,
					 descshown: false,
					 corner: "已使用",
					 cornershown: false,
					 title: "xxx " + i,
				  
					 tip: "没有代金券",
					 tipshown: true,
					 focusFlag: 0
				  });
			}
		}
	},
	
	created: function () {
	    this.getTestData(res => {
			var size = res.data.length;
			console.log("getTestData = " + size);
			this.onDataSuceess(res.data);
		});    
	},
	
	ready: function() {
			var self = this;
			globalEvent.addEventListener("keyEvent", function (e) {
				console.log("keyCode--" + e.keycode + ", focusIndex ="+ self.focusIndex);		 
				self.dispatchKey(e.keycode);
			});
			self.initFlag();
			
	}
}
</script>